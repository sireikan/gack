openapi: 3.1.0
x-stoplight:
  id: frw7j6bzrk681
info:
  title: gack
  version: '1.0'
servers:
  - url: 'http://localhost:8080'
paths:
  /user:
    post:
      summary: Create New User
      operationId: post-user
      responses:
        '200':
          description: User Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
              examples:
                New User Bob Fellow:
                  value:
                    id: 12
                    firstName: Bob
                    lastName: Fellow
                    email: bob.fellow@gmail.com
                    dateOfBirth: '1996-08-24'
                    emailVerified: false
                    createDate: '2020-11-18'
        '400':
          description: Missing Required Information
        '409':
          description: Email Already Taken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
            examples:
              Create User Bob Fellow:
                value:
                  firstName: Bob
                  lastName: Fellow
                  email: bob.fellow@gmail.com
                  dateOfBirth: '1996-08-24'
        description: Post the necessary fields for the API to create a new user.
      description: Create a new user.
      tags:
        - user
    get:
      summary: ''
      operationId: get-user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultipleUserResponse'
              examples:
                Example 1:
                  value:
                    - id: 0
                      name: string
                      email: string
                      password: string
      description: Get Users
      tags:
        - user
    parameters: []
  '/user/{id}':
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
        description: user id
    get:
      summary: Your GET endpoint
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '404':
          description: Not Found
      operationId: get-user-id
      tags:
        - user
    put:
      summary: ''
      operationId: put-user-id
      responses:
        '200':
          description: OK
      description: update user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
    delete:
      summary: ''
      operationId: delete-user-id
      responses:
        '200':
          description: OK
      description: delete user
components:
  schemas:
    UserRequest:
      title: UserRequest
      x-stoplight:
        id: w4lh9zce4nbyj
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
    UserResponse:
      title: UserResponse
      x-stoplight:
        id: tzazowquuet89
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        password:
          type: string
      required:
        - id
        - name
        - email
        - password
    MultipleUserResponse:
      title: MultipleUserResponse
      x-stoplight:
        id: vgmamje9jniw8
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/UserResponse'
      required:
        - users
